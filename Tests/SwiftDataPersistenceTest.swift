import SwiftData
import SwiftUI

// –ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
struct SwiftDataPersistenceTest {
    static let shared = SwiftDataPersistenceTest()

    let modelContainer: ModelContainer

    init() {
        print("üß™ Testing basic SwiftData setup...")

        do {
            // –ù–∞—á–Ω–µ–º —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ö–µ–º—ã
            let testSchema = Schema([
                SwiftDataFilm.self,
                SwiftDataDeveloper.self
            ])

            let config = ModelConfiguration(
                schema: testSchema,
                isStoredInMemoryOnly: true  // –ù–∞—á–Ω–µ–º —Å in-memory
            )

            modelContainer = try ModelContainer(for: testSchema, configurations: [config])
            print("‚úÖ Basic SwiftData test successful")

        } catch {
            print("‚ùå Basic SwiftData test failed: \(error)")
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—Ä–∞—à–∞
            let emptySchema = Schema([SwiftDataFilm.self])
            let emptyConfig = ModelConfiguration(schema: emptySchema, isStoredInMemoryOnly: true)
            modelContainer = try! ModelContainer(for: emptySchema, configurations: [emptyConfig])
        }
    }
}